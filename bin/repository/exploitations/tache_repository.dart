import 'package:postgres/postgres.dart';

import '../../models/exploitations/tache_model.dart';

class TacheRepository {
  final PostgreSQLConnection executor;
  final String tableName;

  TacheRepository(this.executor, this.tableName);

  Future<List<TacheModel>> getAllData() async {
    var data = <TacheModel>{};

    var querySQL = "SELECT * FROM $tableName ORDER BY \"created\" DESC;";
    List<List<dynamic>> results = await executor.query(querySQL);
    for (var row in results) {
      data.add(TacheModel.fromSQL(row));
    }
    return data.toList();
  }

  Future<void> insertData(TacheModel tacheModel) async {
    var nomProjet = tacheModel.nomProjet;
    var numeroTache = tacheModel.numeroTache;
    var agent = tacheModel.agent;
    var jalon = tacheModel.jalon;
    var tache = tacheModel.tache;
    var realisations = tacheModel.realisations;
    var signatureResp = tacheModel.signatureResp;
    var signatureAgent = tacheModel.signatureAgent;
    var created = tacheModel.created;
    var reponseDate = tacheModel.reponseDate;
    var soumettre = tacheModel.soumettre;

    await executor.transaction((ctx) async {
      // ignore: unused_local_variable
      var result = await ctx.execute(
          "INSERT INTO $tableName VALUES (nextval('taches_id_seq'), '$nomProjet',"
          "'$numeroTache','$agent','$jalon','$tache', $realisations',$signatureResp',"
          "'$signatureAgent','$created','$reponseDate', '$soumettre');");
    });
  }

  Future<void> update(TacheModel tacheModel) async {
    var id = tacheModel.id;
    var nomProjet = tacheModel.nomProjet;
    var numeroTache = tacheModel.numeroTache;
    var agent = tacheModel.agent;
    var jalon = tacheModel.jalon;
    var tache = tacheModel.tache;
    var realisations = tacheModel.realisations;
    var signatureResp = tacheModel.signatureResp;
    var signatureAgent = tacheModel.signatureAgent;
    var created = tacheModel.created;
    var reponseDate = tacheModel.reponseDate;
    var soumettre = tacheModel.soumettre;

    await executor.transaction((conn) async {
      // ignore: unused_local_variable
      var result = await conn.execute(
          "UPDATE $tableName SET \"nomProjet\"='$nomProjet', "
          "\"numeroTache\"='$numeroTache',\"agent\"='$agent',"
          "\"jalon\"='$jalon',\"tache\"='$tache',"
          "\"realisations\"='$realisations', \"signatureResp\"='$signatureResp',"
          "\"signatureAgent\"='$signatureAgent', \"created\"='$created',"
          "\"reponseDate\"='$reponseDate', \"soumettre\"='$soumettre' WHERE id=$id;");
    });
  }

  deleteData(int id) async {
    try {
      await executor.transaction((conn) async {
        // ignore: unused_local_variable
        var result = await conn.execute('DELETE FROM $tableName WHERE id=$id;');
      });
    } catch (e) {
      'erreur $e';
    }
  }

  Future<TacheModel> getFromId(int id) async {
    var data =
        await executor.query("SELECT * FROM  $tableName WHERE \"id\" = '$id'");
    return TacheModel(
      id: data[0][0],
      nomProjet: data[0][1],
      numeroTache: data[0][2],
      agent: data[0][3],
      jalon: data[0][4],
      tache: data[0][5],
      realisations: data[0][6],
      signatureResp: data[0][7],
      signatureAgent: data[0][8],
      created: data[0][9],
      reponseDate: data[0][10],
      soumettre: data[0][11]
    );
  }
}