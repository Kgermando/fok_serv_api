import 'package:postgres/postgres.dart';
 
import '../../models/exploitations/section_projet_model.dart';

class SectionProjetRepository {
  final PostgreSQLConnection executor;
  final String tableName;

  SectionProjetRepository(this.executor, this.tableName);

  Future<List<SectionProjetModel>> getAllData() async {
    var data = <SectionProjetModel>{};

    var querySQL = "SELECT * FROM $tableName ORDER BY \"created\" ASC;";
    List<List<dynamic>> results = await executor.query(querySQL);
    for (var row in results) {
      data.add(SectionProjetModel.fromSQL(row));
    }
    return data.toList();
  }

  Future<void> insertData(SectionProjetModel data) async {
    await executor.transaction((ctx) async {
      await ctx.execute(
        "INSERT INTO $tableName (id, nom_projet, reference, section,"
        "detail, signature, created)"
        "VALUES (nextval('section_projets_id_seq'), @1, @2, @3, @4, @5, @6)",
        substitutionValues: {
          '1': data.nomProjet,
          '2': data.reference,
          '3': data.section,
          '4': data.detail,
          '5': data.signature, 
          '6': data.created 
        });
    });
  }

  Future<void> update(SectionProjetModel data) async {
   await executor.query("""UPDATE $tableName
      SET nom_projet = @1, reference = @2, section = @3, detail = @4,
      signature = @5, created = @6 WHERE id = @7""", 
      substitutionValues: {
        '1': data.nomProjet,
        '2': data.reference,
        '3': data.section,
        '4': data.detail,
        '5': data.signature,
        '6': data.created,
        '7': data.id
    });
  }

  deleteData(int id) async {
    try {
      await executor.transaction((conn) async {
        // ignore: unused_local_variable
        var result = await conn.execute('DELETE FROM $tableName WHERE id=$id;');
      });
    } catch (e) {
      'erreur $e';
    }
  }

  Future<SectionProjetModel> getFromId(int id) async {
    var data =
        await executor.query("SELECT * FROM  $tableName WHERE \"id\" = '$id'");
    return SectionProjetModel(
      id: data[0][0],
      nomProjet: data[0][1],
      reference: data[0][2],
      section: data[0][3],
      detail: data[0][4],
      signature: data[0][5],
      created: data[0][6] 
    );
  }
}
