import 'package:postgres/postgres.dart';

import '../../models/exploitations/projet_model.dart';

class ProjetRepository {
  final PostgreSQLConnection executor;
  final String tableName;

  ProjetRepository(this.executor, this.tableName);

  Future<List<ProjetModel>> getAllData() async {
    var data = <ProjetModel>{};

    var querySQL = "SELECT * FROM $tableName ORDER BY \"created\" DESC;";
    List<List<dynamic>> results = await executor.query(querySQL);
    for (var row in results) {
      data.add(ProjetModel.fromSQL(row));
    }
    return data.toList();
  }

  Future<void> insertData(ProjetModel data) async {
    await executor.transaction((ctx) async {
      await ctx.execute(
        "INSERT INTO $tableName (id, nom_projet, cout_projet, responsable,"
        "objectifs, description, responsabilite,"
        "communication, processus_verification, probleme_potient_et_risque,"
        "date_debut_et_fin, budget_detail, recette_attendus,"
        "type_financement, observation, signature, created_ref, created,"
        "approbation_dg, motif_dg, signature_dg, approbation_budget, motif_budget, signature_budget,"
        "approbation_fin, motif_fin, signature_fin, approbation_dd, motif_dd, signature_dd,"
        "ligne_budgetaire, ressource)"
        "VALUES (nextval('projets_id_seq'), @1, @2, @3, @4, @5, @6,"
        "@7, @8, @9, @10, @11, @12, @13, @14, @15, @16, @17, @18, @19, @20,"
        "@21, @22, @23, @24, @25, @26, @27, @28, @29, @30, @31)",
        substitutionValues: {
          '1': data.nomProjet,
          '2': data.coutProjet,
          '3': data.responsable,
          '4': data.objectifs,
          '5': data.description, 
          '6': data.responsabilite,
          '7': data.communication,
          '8': data.processusVerification,
          '9': data.problemePotientEtRisque,
          '10': data.dateDebutEtFin,
          '11': data.budgetDetail,
          '12': data.recetteAttendus,
          '13': data.typeFinancement,
          '14': data.observation,
          '15': data.signature,
          '16': data.createdRef,
          '17': data.created,
          '18': data.approbationDG,
          '19': data.motifDG,
          '20': data.signatureDG,
          '21': data.approbationBudget,
          '22': data.motifBudget,
          '23': data.signatureBudget,
          '24': data.approbationFin,
          '25': data.motifFin,
          '26': data.signatureFin,
          '27': data.approbationDD,
          '28': data.motifDD,
          '29': data.signatureDD,
          '30': data.ligneBudgetaire,
          '31': data.ressource
        });
    });
  }

  Future<void> update(ProjetModel data) async {
   await executor.query("""UPDATE $tableName
      SET nom_projet = @1, cout_projet = @2, responsable = @3, objectifs = @4,
      description = @5, responsabilite = @6,
      communication = @7, processus_verification = @8, probleme_potient_et_risque = @9,
      date_debut_et_fin = @10, budget_detail = @11, recette_attendus = @12,
      type_financement = @13, observation = @14, signature = @15,
      created_ref = @16, created = @17,
      approbation_dg = @18, motif_dg = @19, signature_dg = @20, approbation_budget = @21,
      motif_budget = @22, signature_budget = @23, approbation_fin = @24, motif_fin = @25,
      signature_fin = @26, approbation_dd = @27, motif_dd = @28, signature_dd = @29,
      ligne_budgetaire = @30, ressource = @31 WHERE id = @32""", 
      substitutionValues: {
      '1': data.nomProjet,
      '2': data.coutProjet,
      '3': data.responsable,
      '4': data.objectifs,
      '5': data.description,
      '6': data.responsabilite,
      '7': data.communication,
      '8': data.processusVerification,
      '9': data.problemePotientEtRisque,
      '10': data.dateDebutEtFin,
      '11': data.budgetDetail,
      '12': data.recetteAttendus,
      '13': data.typeFinancement,
      '14': data.observation,
      '15': data.signature,
      '16': data.createdRef,
      '17': data.created,
      '18': data.approbationDG,
      '19': data.motifDG,
      '20': data.signatureDG,
      '21': data.approbationBudget,
      '22': data.motifBudget,
      '23': data.signatureBudget,
      '24': data.approbationFin,
      '25': data.motifFin,
      '26': data.signatureFin,
      '27': data.approbationDD,
      '28': data.motifDD,
      '29': data.signatureDD,
      '30': data.ligneBudgetaire,
      '31': data.ressource,
      '32': data.id
    });
  }

  deleteData(int id) async {
    try {
      await executor.transaction((conn) async {
        // ignore: unused_local_variable
        var result = await conn.execute('DELETE FROM $tableName WHERE id=$id;');
      });
    } catch (e) {
      'erreur $e';
    }
  }

  Future<ProjetModel> getFromId(int id) async {
    var data =
        await executor.query("SELECT * FROM  $tableName WHERE \"id\" = '$id'");
    return ProjetModel(
      id: data[0][0],
      nomProjet: data[0][1],
      coutProjet: data[0][2],
      responsable: data[0][3],
      objectifs: data[0][4],
      description: data[0][5],
      responsabilite: data[0][6],
      communication: data[0][7],
      processusVerification: data[0][8],
      problemePotientEtRisque: data[0][9],
      dateDebutEtFin: data[0][10],
      budgetDetail: data[0][11],
      recetteAttendus: data[0][12],
      typeFinancement: data[0][13],
      observation: data[0][14],
      signature: data[0][15],
      createdRef: data[0][16],
      created: data[0][17],
      approbationDG: data[0][18],
      motifDG: data[0][19],
      signatureDG: data[0][20],
      approbationBudget: data[0][21],
      motifBudget: data[0][22],
      signatureBudget: data[0][23],
      approbationFin: data[0][24],
      motifFin: data[0][25],
      signatureFin: data[0][26],
      approbationDD: data[0][27],
      motifDD: data[0][28],
      signatureDD: data[0][29],
      ligneBudgetaire: data[0][30],
      ressource: data[0][31]
    );
  }
}
