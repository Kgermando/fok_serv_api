import 'package:postgres/postgres.dart';

import '../../models/exploitations/projet_model.dart';

class ProjetRepository {
  final PostgreSQLConnection executor;
  final String tableName;

  ProjetRepository(this.executor, this.tableName);

  Future<List<ProjetModel>> getAllData() async {
    var data = <ProjetModel>{};

    var querySQL = "SELECT * FROM $tableName ORDER BY \"created\" DESC;";
    List<List<dynamic>> results = await executor.query(querySQL);
    for (var row in results) {
      data.add(ProjetModel.fromSQL(row));
    }
    return data.toList();
  }

  Future<void> insertData(ProjetModel projetModel) async {
    var nomProjet = projetModel.nomProjet;
    var responsable = projetModel.responsable;
    var objectifs = projetModel.objectifs;
    var description = projetModel.description;
    var ligneBudgtaire = projetModel.ligneBudgtaire;
    var resources = projetModel.resources;
    var responsabilite = projetModel.responsabilite;
    var communication = projetModel.communication;
    var processusVerification = projetModel.processusVerification;
    var problemePotientEtRisque = projetModel.problemePotientEtRisque;
    var dateDebutEtFin = projetModel.dateDebutEtFin;
    var budgetDetail = projetModel.budgetDetail;
    var recetteAttendus = projetModel.recetteAttendus;
    var listAgentEtRole = projetModel.listAgentEtRole;
    var typeFinancement = projetModel.typeFinancement;
    var observation = projetModel.observation;

    var approbationDG = projetModel.approbationDG;
    var signatureDG = projetModel.signatureDG;
    var signatureJustificationDG = projetModel.signatureJustificationDG;

    var approbationFin = projetModel.approbationFin;
    var signatureFin = projetModel.signatureFin;
    var signatureJustificationFin =
        projetModel.signatureJustificationFin;

    var approbationBudget = projetModel.approbationBudget;
    var signatureBudget = projetModel.signatureBudget;
    var signatureJustificationBudget =
        projetModel.signatureJustificationBudget;

    var approbationDD = projetModel.approbationDD;
    var signatureDD = projetModel.signatureDD;
    var signatureJustificationDD =
        projetModel.signatureJustificationDD;

    var signature = projetModel.signature;
    var created = projetModel.created;

    await executor.transaction((ctx) async {
      // ignore: unused_local_variable
      var result = await ctx.execute(
        "INSERT INTO $tableName VALUES (nextval('projets_id_seq'), '$nomProjet',"
          "'$responsable','$objectifs','$description', '$ligneBudgtaire', '$resources',"
          "'$responsabilite','$communication',"
          "'$processusVerification','$problemePotientEtRisque','$dateDebutEtFin',"
          "'$budgetDetail', '$recetteAttendus', '$listAgentEtRole', '$typeFinancement',"
          "'$observation',"
          "'$approbationDG', '$signatureDG', '$signatureJustificationDG', '$approbationFin',"
          "'$signatureFin', '$signatureJustificationFin', '$approbationBudget',"
          "'$signatureBudget', '$signatureJustificationBudget', '$approbationDD',"
          "'$signatureDD', '$signatureJustificationDD',"
          "'$signature','$created');");
    });
  }

  Future<void> update(ProjetModel projetModel) async {
    var id = projetModel.id;
    var nomProjet = projetModel.nomProjet;
    var responsable = projetModel.responsable;
    var objectifs = projetModel.objectifs;
    var description = projetModel.description;
    var ligneBudgtaire = projetModel.ligneBudgtaire;
    var resources = projetModel.resources;
    var responsabilite = projetModel.responsabilite;
    var communication = projetModel.communication;
    var processusVerification = projetModel.processusVerification;
    var problemePotientEtRisque = projetModel.problemePotientEtRisque;
    var dateDebutEtFin = projetModel.dateDebutEtFin;
    var budgetDetail = projetModel.budgetDetail;
    var recetteAttendus = projetModel.recetteAttendus;
    var listAgentEtRole = projetModel.listAgentEtRole;
    var typeFinancement = projetModel.typeFinancement;
    var observation = projetModel.observation;
    var approbationDG = projetModel.approbationDG;
    var signatureDG = projetModel.signatureDG;
    var signatureJustificationDG = projetModel.signatureJustificationDG;

    var approbationFin = projetModel.approbationFin;
    var signatureFin = projetModel.signatureFin;
    var signatureJustificationFin =
        projetModel.signatureJustificationFin;

    var approbationBudget = projetModel.approbationBudget;
    var signatureBudget = projetModel.signatureBudget;
    var signatureJustificationBudget =
        projetModel.signatureJustificationBudget;

    var approbationDD = projetModel.approbationDD;
    var signatureDD = projetModel.signatureDD;
    var signatureJustificationDD =
        projetModel.signatureJustificationDD;

    var signature = projetModel.signature;
    var created = projetModel.created;


    await executor.transaction((conn) async {
      // ignore: unused_local_variable
      var result = await conn.execute(
        "UPDATE $tableName SET \"nomProjet\"='$nomProjet', "
        "\"responsable\"='$responsable',\"objectifs\"='$objectifs',"
        "\"description\"='$description', \"ligneBudgtaire\"='$ligneBudgtaire', \"resources\"='$resources',"
        "\"responsabilite\"='$responsabilite', \"communication\"='$communication',"
        "\"processusVerification\"='$processusVerification', \"problemePotientEtRisque\"='$problemePotientEtRisque',"
        "\"dateDebutEtFin\"='$dateDebutEtFin', \"budgetDetail\"='$budgetDetail', \"recetteAttendus\"='$recetteAttendus',"
        "\"listAgentEtRole\"='$listAgentEtRole', \"typeFinancement\"='$typeFinancement', \"observation\"='$observation',"
        "\"approbationDG\"='$approbationDG', \"signatureDG\"='$signatureDG',"
        "\"signatureJustificationDG\"='$signatureJustificationDG',"
        "\"approbationFin\"='$approbationFin', \"signatureFin\"='$signatureFin',"
        "\"signatureJustificationFin\"='$signatureJustificationFin',"
        "\"approbationBudget\"='$approbationBudget', \"signatureBudget\"='$signatureBudget',"
        "\"signatureJustificationBudget\"='$signatureJustificationBudget',"
        "\"approbationDD\"='$approbationDD', \"signatureDD\"='$signatureDD',"
        "\"signatureJustificationDD\"='$signatureJustificationDD',"
        "\"signature\"='$signature', \"created\"='$created' WHERE id=$id;");
    });
  }

  deleteData(int id) async {
    try {
      await executor.transaction((conn) async {
        // ignore: unused_local_variable
        var result = await conn.execute('DELETE FROM $tableName WHERE id=$id;');
      });
    } catch (e) {
      'erreur $e';
    }
  }

  Future<ProjetModel> getFromId(int id) async {
    var data =
        await executor.query("SELECT * FROM  $tableName WHERE \"id\" = '$id'");
    return ProjetModel(
      id: data[0][0],
      nomProjet: data[0][1],
      responsable: data[0][2],
      objectifs: data[0][3],
      description: data[0][4],
      ligneBudgtaire: data[0][5],
      resources: data[0][6],
      responsabilite: data[0][7],
      communication: data[0][8],
      processusVerification: data[0][9],
      problemePotientEtRisque: data[0][10],
      dateDebutEtFin: data[0][11],
      budgetDetail: data[0][12],
      recetteAttendus: data[0][13],
      listAgentEtRole: data[0][14],
      typeFinancement: data[0][15],
      observation: data[0][16],
      approbationDG: data[0][17],
      signatureDG: data[0][18],
      signatureJustificationDG: data[0][19],
      approbationFin: data[0][20],
      signatureFin: data[0][21],
      signatureJustificationFin: data[0][22],
      approbationBudget: data[0][23],
      signatureBudget: data[0][24],
      signatureJustificationBudget: data[0][25],
      approbationDD: data[0][26],
      signatureDD: data[0][27],
      signatureJustificationDD: data[0][28],
      signature: data[0][29],
      created: data[0][30]
    );
  }
}
