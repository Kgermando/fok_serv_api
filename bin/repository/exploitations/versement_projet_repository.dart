import 'package:postgres/postgres.dart';

import '../../models/exploitations/versement_projet_model.dart';

class VersementProjetRepository {
  final PostgreSQLConnection executor;
  final String tableName;

  VersementProjetRepository(this.executor, this.tableName);

  Future<List<VersementProjetModel>> getAllData() async {
    var data = <VersementProjetModel>{};

    var querySQL = "SELECT * FROM $tableName ORDER BY \"created\" DESC;";
    List<List<dynamic>> results = await executor.query(querySQL);
    for (var row in results) {
      data.add(VersementProjetModel.fromSQL(row));
    }
    return data.toList();
  }

  Future<void> insertData(VersementProjetModel data) async {
    var nomProjet = data.nomProjet;
    var pieceJustificative = data.pieceJustificative;
    var montantVerser = data.montantVerser;
    var montantEnLettre = data.montantEnLettre;
    var typeVersement = data.typeVersement;
    var signature = data.signature;
    var created = data.created;

    await executor.transaction((ctx) async {
      // ignore: unused_local_variable
      var result = await ctx.execute(
        "INSERT INTO $tableName VALUES (nextval('versement_projets_id_seq'), '$nomProjet',"
        "'$pieceJustificative','$montantVerser','$montantEnLettre', '$typeVersement',"
        "'$signature','$created');");
    });
  }

  Future<void> update(VersementProjetModel data) async {
    var id = data.id;
    var nomProjet = data.nomProjet;
    var pieceJustificative = data.pieceJustificative;
    var montantVerser = data.montantVerser;
    var montantEnLettre = data.montantEnLettre;
    var typeVersement = data.typeVersement;
    var signature = data.signature;
    var created = data.created;


    await executor.transaction((conn) async {
      // ignore: unused_local_variable
      var result = await conn.execute(
        "UPDATE $tableName SET \"nomProjet\"='$nomProjet', "
        "\"pieceJustificative\"='$pieceJustificative',\"montantVerser\"='$montantVerser',"
        "\"montantEnLettre\"='$montantEnLettre', \"typeVersement\"='$typeVersement',"
        "\"signature\"='$signature', \"created\"='$created' WHERE id=$id;");
    });
  }

  deleteData(int id) async {
    try {
      await executor.transaction((conn) async {
        // ignore: unused_local_variable
        var result = await conn.execute('DELETE FROM $tableName WHERE id=$id;');
      });
    } catch (e) {
      'erreur $e';
    }
  }

  Future<VersementProjetModel> getFromId(int id) async {
    var data =
        await executor.query("SELECT * FROM  $tableName WHERE \"id\" = '$id'");
    return VersementProjetModel(
      id: data[0][0],
      nomProjet: data[0][1],
      pieceJustificative: data[0][2],
      montantVerser: data[0][3],
      montantEnLettre: data[0][4],
      typeVersement: data[0][5],
      signature: data[0][6],
      created: data[0][7]
    );
  }
}