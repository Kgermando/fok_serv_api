class TacheModel {
  late int? id;
  late String nomProjet;
  late String numeroTache;
  late String agent;
  late String jalon; // reperes pour le projet
  late String tache; // Tache Ã  faire par l'agent
  late String realisations; // realisation de l'agent
  late String signatureResp; // signature responsable
  late String signatureAgent;
  late DateTime created; // date creation par le boss
  late DateTime reponseDate; // date reponse par l"agent apres travail
  // Permet de garder une copie en brouillon pour travailler sans soumettre chez le boss
  late bool soumettre; 

 
  TacheModel(
      {this.id,
      required this.nomProjet,
      required this.numeroTache,
      required this.agent,
      required this.jalon,
      required this.tache,
      required this.realisations,
      required this.signatureResp,
      required this.signatureAgent,
      required this.created,
      required this.reponseDate,
      required this.soumettre});

  factory TacheModel.fromSQL(List<dynamic> row) {
    return TacheModel(
        id: row[0],
        nomProjet: row[1],
        numeroTache: row[2],
        agent: row[3],
        jalon: row[4],
        tache: row[5],
        realisations: row[6],
        signatureResp: row[7],
        signatureAgent: row[8],
        created: row[9],
        reponseDate: row[10],
        soumettre: row[11]);
  }

  factory TacheModel.fromJson(Map<String, dynamic> json) {
    return TacheModel(
        id: json['id'],
        nomProjet: json['nomProjet'],
        numeroTache: json['numeroTache'],
        agent: json['agent'],
        jalon: json['jalon'],
        tache: json['tache'],
        realisations: json['realisations'],
        signatureResp: json['id'],
        signatureAgent: json['id'],
        created: DateTime.parse(json['created']),
        reponseDate: DateTime.parse(json['reponseDate']),
        soumettre: json['soumettre']);
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'nomProjet': nomProjet,
      'numeroTache': numeroTache,
      'agent': agent,
      'jalon': jalon,
      'tache': tache,
      'realisations': realisations,
      'signatureResp': signatureResp,
      'signatureAgent': signatureAgent,
      'created': created.toIso8601String(),
      'reponseDate': reponseDate.toIso8601String(),
      'soumettre': soumettre
    };
  }
}
