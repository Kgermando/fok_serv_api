class ProjetModel {
  late int? id;
  late String nomProjet;
  late String coutProjet;
  late String responsable;
  late String objectifs;
  late String description;
  late String responsabilite;
  late String communication;
  late String processusVerification;
  late String problemePotientEtRisque;
  late String dateDebutEtFin;
  late String budgetDetail;
  late String recetteAttendus;
  late String typeFinancement;
  late String observation;
  late String signature; // celui qui fait le document
  late DateTime createdRef;
  late DateTime created;
     // Approbations DG
  late String approbationDG;
  late String motifDG;
  late String signatureDG;
  // Approbations Budget
  late String approbationBudget;
  late String motifBudget;
  late String signatureBudget;
  // Approbations Finance
  late String approbationFin;
  late String motifFin;
  late String signatureFin;
  // Approbations DD
  late String approbationDD;
  late String motifDD;
  late String signatureDD;

  // Ligne budgetaire pour reduction des montants
  late String ligneBudgetaire;
  late String ressource;


  ProjetModel(
      {this.id,
      required this.nomProjet,
      required this.coutProjet,
      required this.responsable,
      required this.objectifs,
      required this.description,
      required this.responsabilite,
      required this.communication,
      required this.processusVerification,
      required this.problemePotientEtRisque,
      required this.dateDebutEtFin,
      required this.budgetDetail,
      required this.recetteAttendus,
      required this.typeFinancement,
      required this.observation,
      required this.signature,
      required this.createdRef,
      required this.created,
      required this.approbationDG,
      required this.motifDG,
      required this.signatureDG,
      required this.approbationBudget,
      required this.motifBudget,
      required this.signatureBudget,
      required this.approbationFin,
      required this.motifFin,
      required this.signatureFin,
      required this.approbationDD,
      required this.motifDD,
      required this.signatureDD,
      required this.ligneBudgetaire,
      required this.ressource});

  factory ProjetModel.fromSQL(List<dynamic> row) {
    return ProjetModel(
        id: row[0],
        nomProjet: row[1],
        coutProjet: row[2],
        responsable: row[3],
        objectifs: row[4],
        description: row[5],
        responsabilite: row[6],
        communication: row[7],
        processusVerification: row[8],
        problemePotientEtRisque: row[9],
        dateDebutEtFin: row[10],
        budgetDetail: row[11],
        recetteAttendus: row[12],
        typeFinancement: row[13],
        observation: row[14],
        signature: row[15],
        createdRef: row[16],
        created: row[17],
        approbationDG: row[18],
        motifDG: row[19],
        signatureDG: row[20],
        approbationBudget: row[21],
        motifBudget: row[22],
        signatureBudget: row[23],
        approbationFin: row[24],
        motifFin: row[25],
        signatureFin: row[26],
        approbationDD: row[27],
        motifDD: row[28],
        signatureDD: row[29],
        ligneBudgetaire: row[30],
        ressource: row[31]);
  }

  factory ProjetModel.fromJson(Map<String, dynamic> json) {
    return ProjetModel(
        id: json['id'],
        nomProjet: json['nomProjet'],
        coutProjet: json['coutProjet'],
        responsable: json['responsable'],
        objectifs: json['objectifs'],
        description: json['description'],
        responsabilite: json['responsabilite'],
        communication: json['communication'],
        processusVerification: json['processusVerification'],
        problemePotientEtRisque: json['problemePotientEtRisque'],
        dateDebutEtFin: json['dateDebutEtFin'],
        budgetDetail: json['budgetDetail'],
        recetteAttendus: json['recetteAttendus'],
        typeFinancement: json['typeFinancement'],
        observation: json['observation'],
        signature: json['signature'],
        createdRef: DateTime.parse(json['createdRef']),
        created: DateTime.parse(json['created']),
        approbationDG: json['approbationDG'],
        motifDG: json['motifDG'],
        signatureDG: json['signatureDG'],
        approbationBudget: json['approbationBudget'],
        motifBudget: json['motifBudget'],
        signatureBudget: json['signatureBudget'],
        approbationFin: json['approbationFin'],
        motifFin: json['motifFin'],
        signatureFin: json['signatureFin'],
        approbationDD: json['approbationDD'],
        motifDD: json['motifDD'],
        signatureDD: json['signatureDD'],
        ligneBudgetaire: json['ligneBudgetaire'],
        ressource: json['ressource']);
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'nomProjet': nomProjet,
      'coutProjet': coutProjet,
      'responsable': responsable,
      'objectifs': objectifs,
      'description': description,
      'responsabilite': responsabilite,
      'communication': communication,
      'processusVerification': processusVerification,
      'problemePotientEtRisque': problemePotientEtRisque,
      'dateDebutEtFin': dateDebutEtFin,
      'budgetDetail': budgetDetail,
      'recetteAttendus': recetteAttendus,
      'typeFinancement': typeFinancement,
      'observation': observation.toString(),
      'signature': signature,
      'createdRef': createdRef.toIso8601String(),
      'created': created.toIso8601String(),
      'approbationDG': approbationDG,
      'motifDG': motifDG,
      'signatureDG': signatureDG,
      'approbationBudget': approbationBudget,
      'motifBudget': motifBudget,
      'signatureBudget': signatureBudget,
      'approbationFin': approbationFin,
      'motifFin': motifFin,
      'signatureFin': signatureFin,
      'approbationDD': approbationDD,
      'motifDD': motifDD,
      'signatureDD': signatureDD,
      'ligneBudgetaire': ligneBudgetaire,
      'ressource': ressource
    };
  }
}
